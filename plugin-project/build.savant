project(name: "plugin-project", group: "org.inversoft.savant", version: "0.1", licenses: ["ApacheV2_0"]) {
  workflow {
    standard()
  }

  dependencies {
    group(name: "provided") {
      dependency(id: "org.savantbuild:savant-core:0.3.0")
      dependency(id: "org.savantbuild:savant-dependency-management:0.3.0")
      dependency(id: "org.savantbuild:savant-utils:0.3.0")
    }
    group(name: "test-compile", export: false) {
      dependency(id: "org.testng:testng:6.8.7")
    }
  }

  publications {
    standard()
  }
}
// Plugins
dependency = loadPlugin(id: "org.savantbuild.plugin:dependency:0.3.1")
groovy = loadPlugin(id: "org.savantbuild.plugin:groovy:0.3.2")
groovyTestNG = loadPlugin(id: "org.savantbuild.plugin:groovy-testng:0.3.1")
release = loadPlugin(id: "org.savantbuild.plugin:release-git:0.3.2")
idea = loadPlugin(id: "org.savantbuild.plugin:idea:0.3.2")

// Plugin settings
groovy.settings.groovyVersion = "2.2"
groovy.settings.javaVersion = "1.8"
groovy.settings.jarManifest = [
    "Savant-Plugin-Class": "MyPlugin"
]
groovyTestNG.settings.groovyVersion = "2.2"
groovyTestNG.settings.javaVersion = "1.8"

target(name: "clean", description: "Cleans the project") {
  groovy.clean()
}

target(name: "compile", description: "Compiles the project") {
  groovy.compile()
}

target(name: "jar", description: "JARs the project", dependsOn: ["compile"]) {
  groovy.jar()
}

target(name: "test", description: "Runs the project's tests", dependsOn: ["jar"]) {
  groovyTestNG.test()
}

target(name: "int", description: "Releases a local integration build of the project", dependsOn: ["test"]) {
  dependency.integrate()
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["test"]) {
  release.release()
}

target(name: "idea", description: "Generates the IntelliJ files") {
  idea.iml()
}